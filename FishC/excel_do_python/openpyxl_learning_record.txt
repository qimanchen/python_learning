关于使用python操作excel的一些记录：
	1.创建一个工作簿
		wb = openpyxl.Workbook() -> return workbook object
	2. 得到当前工作中的工作表 - worksheet
		ws = wb.active -> return a worksheet object
	3. 通过ws.title 得到worksheet名称
	4. 添加数据的方式
		a. ws['A1'] = 520  -- A(column) , 1(row)
		b. ws.apped([1, 2, 3])  -- ws['A2'] = 1, ws['B2'] = 2, ...
	5. 以指定的文件名保存
		wb.save("demo_excel.xlsx")
		
		
	# 打开指定excel工作簿
	wb = openpyxl.load_workboot(文件路径)
	
	# 得到这一工作簿中的所有worksheet（name)
	wb.sheetnames --> return a list
	
	# 打开指定名称的worksheet
	ws = wb['worksheet name']
	或者 ws = get_sheet_by_name('worksheet name')
	
	# 在当前工作簿中生成一个新的worksheet
	nws = wb.create_sheet(index=插入位置， title=worksheet name)
	
	# 删除 指定工作簿
	del wb['worksheet name'] or wb.remove(worksheet object)
	
	#  访问指定位置单元格
	c = ws['A2']
	c.row -- 2
	c.column -- A
	c.coordinate -- A2
	ws['A2'].value -- A2单元格中存储的数据
	
	# 以一个单元格为参考访问另一单元格
	d = c.offset(移动行数, 移动列数)  向下移动两格位置的数据
	
	# 同时访问多个单元格
	for each_movie in ws['A2': 'B10']:  # column A - B  , row 2 - 10
		for each_cell in each_movie:
			print(each_cell.value, end=' ')
		print('\n')
		
	# 可通过ws.rows访问所有有数据的行
	for each_row in ws.rows:  # 访问第一列的所有数据
		print(each_row[0].value)
		
	# 访问指定区域块
	for each_row in ws.iter_rows(min_row=2, min_col=1, max_row=4, max_col=2):
		# column A - B, row 2 - 4
		print(each_row[0].value)
		
	# 拷贝worksheet  -- 在原工作簿中增加一个新的worksheet（与ws相同）
	new = wb.copy_worksheet(ws)
	wb.save(要存储到的工作簿的路径) 
	
	# 得到excel worksheet中column编号
	print(openpyxl.cell.cell.get_column_letter(496))    --->  output  --  'SB'(访问单元格的列号) 

	print(openpyxl.cell.cell.column_index_from_string('JB'))  ---> output -- 262
	
	
	
	
		
		